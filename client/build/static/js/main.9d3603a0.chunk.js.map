{"version":3,"sources":["redux/actions/productAction.js","redux/reducers/reducer.js","redux/store.js","components/SignOut/SignOut.js","components/Navigation/Header.js","components/Calculator/Expenses.js","components/Calculator/Products.js","components/Product/Product.js","components/Authentication/Login.js","components/Authentication/Register.js","components/Alert/Alert.js","components/Table/TableTools.js","components/Table/TableRow.js","components/Table/Table.js","components/UserInfo/UserInfo.js","redux/actions/userAction.js","App.js","serviceWorker.js","index.js"],"names":["getProducts","data","type","payload","editProductClicked","expensesClicked","tableUpdated","initState","products","totalPrice","productToEdit","nameUpdated","store","createStore","state","action","newProducts","filter","product","_id","signOut","props","id","className","onClick","hide","signOutAccepted","Header","setState","active","clicked","dispatch","productsClicked","signOutClicked","hideSignOut","localStorage","clear","removeItem","name","getItem","prevProps","prevState","console","log","this","Fragment","to","src","alt","SignOut","React","Component","connect","Expenses","yearlySelect","monthlyDisplay","yearlyDisplay","yearlySelected","monthlySelect","yearlySelectHandler","event","target","value","monthlySelectHandler","year","Date","getFullYear","years","Array","from","val","index","months","axios","get","headers","then","res","catch","err","length","monthNum","i","toString","dateFrom","getTime","dateTo","yearly","onChange","defaultChecked","map","key","monthly","month","yearMonthly","header","htmlFor","table","Products","newProductHandler","filterHandler","filterOption","NewProduct","saveProduct","createProduct","description","date","price","preventDefault","alert","post","_created","editProduct","put","_modified","defaultValue","slice","Number","Login","saveLoginData","redirectToMain","signed","signIn","email","password","setItem","jwt","first_name","last_name","Register","saveUserToState","saveUser","date_of_birth","telephone","country","delete","TableTools","deleteProduct","tableTools","Table","hideAlert","alertShow","productID","deleteProductHandler","parseInt","tableRow","TableRow","Math","random","Alert","UserInfo","saveUserInfo","address","checkboxClickedHandler","addressCheckbox","checked","updateUserInfo","birthday","_address","last","App","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d3603a0.chunk.js","sourcesContent":["export const getProducts = (data) => {\r\n    return {\r\n        type: 'GET_PRODUCTS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (product) => {\r\n    return {\r\n        type: \"DELETE_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\n\r\nexport const getTotalPrice = (price) => {\r\n    return {\r\n        type: \"GET_TOTAL_PRICE\",\r\n        payload: price\r\n    }\r\n}\r\n\r\nexport const editProduct = (product, editProductClicked) => {\r\n    return {\r\n        type: \"EDIT_PRODUCT\",\r\n        product,\r\n        editProductClicked\r\n    }\r\n}\r\n\r\nexport const editProductClicked = (editProductClicked) => {\r\n    return {\r\n        type: \"EDIT_PRODUCT_CLICKED\",\r\n        editProductClicked\r\n    }\r\n}\r\n\r\nexport const expensesClicked = (expensesClicked) => {\r\n    return {\r\n        type: \"EXPENSES_CLICKED\",\r\n        expensesClicked\r\n    }\r\n}\r\n\r\nexport const tableUpdated = (tableUpdated) => {\r\n    return {\r\n        type: \"TABLE_UPDATED\",\r\n        tableUpdated\r\n    }\r\n}\r\n\r\n","const initState = {\r\n    products: [],\r\n    totalPrice: '',\r\n    productToEdit: '',\r\n    editProductClicked: '',\r\n    expensesClicked: false,\r\n    tableUpdated: false,\r\n    nameUpdated: null\r\n}\r\n\r\nexport function reducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"GET_PRODUCTS\": {\r\n            return {\r\n                ...state, products: action.payload\r\n            }\r\n        }\r\n        \r\n        case \"DELETE_PRODUCT\": {\r\n            let newProducts = state.products.filter(product => {\r\n                return action.payload._id !== product._id\r\n            })\r\n            return { ...state, products: newProducts }\r\n        }\r\n\r\n        case \"GET_TOTAL_PRICE\": {\r\n            return { ...state, totalPrice: action.payload }\r\n        }\r\n\r\n        case \"EDIT_PRODUCT\": {\r\n            return { ...state, productToEdit: action.product }\r\n        }\r\n\r\n        case \"EDIT_PRODUCT_CLICKED\": {\r\n            return { ...state, editProductClicked: action.editProductClicked }\r\n        }\r\n\r\n        case \"EXPENSES_CLICKED\": {\r\n            return { ...state, expensesClicked: action.expensesClicked }\r\n        }\r\n\r\n        case \"TABLE_UPDATED\": {\r\n            return { ...state, tableUpdated: action.tableUpdated }\r\n        }\r\n\r\n        case \"NAME_UPDATED\": {\r\n            return { ...state, nameUpdated: action.nameUpdated }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from 'redux'\r\n\r\nimport { reducer } from './reducers/reducer'\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react'\r\nimport '../../assets/styles/Pop-up.css'\r\n\r\nconst signOut = (props) => {\r\n    return (\r\n        <div id=\"alert\" className='log-out'>\r\n        <div id=\"alert-container\">\r\n            <div id=\"alert-text-container\">\r\n                <h1>You are signing out</h1>\r\n                <p>You are about to sign out. Are you sure ?</p>\r\n            </div>\r\n            <div id=\"alert-buttons\">\r\n                <button className=\"alert-btn\" id=\"cancel-alert-btn\" onClick={props.hide}\r\n                >CANCEL</button>\r\n                <button className=\"alert-btn\" id=\"delete-alert-btn\" onClick={props.signOutAccepted}\r\n                >SIGN OUT</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default signOut;","import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { expensesClicked } from '../../redux/actions/productAction'\r\nimport store from '../../redux/store'\r\nimport SignOut from '../SignOut/SignOut'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { nameUpdated } from '../../redux/actions/userAction'\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            active: false,\r\n            expensesClicked: false,\r\n            signOut: false,\r\n            signOutClicked: false,\r\n            nameUpdated: false,\r\n            name: localStorage.getItem('first_name') + ' ' + localStorage.getItem('last_name')\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(prevProps, prevState)\r\n        if (this.state.nameUpdated) {\r\n                console.log(\"gg\")\r\n                this.setState({ name: localStorage.getItem('first_name') + ' ' + localStorage.getItem('last_name') })    \r\n        } \r\n    }\r\n\r\n    expensesClicked = () => {\r\n        this.setState({ active: true, expensesClicked: true })\r\n        const clicked = !this.state.expensesClicked\r\n        store.dispatch(expensesClicked(clicked))\r\n    }\r\n\r\n    productsClicked = () => {\r\n        this.setState({ active: false, expensesClicked: false })\r\n        const clicked = this.state.expensesClicked\r\n        store.dispatch(expensesClicked(clicked))\r\n    }\r\n\r\n    signOutClicked = () => {\r\n        this.setState({ signOutClicked: true })\r\n    }\r\n\r\n    hideSignOut = () => {\r\n        this.setState({ signOutClicked: false })\r\n    }\r\n\r\n    signOutAccepted = () => {\r\n        localStorage.clear()\r\n        localStorage.removeItem('jwt')\r\n        this.setState({ signOut: true })\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <React.Fragment>\r\n                {!localStorage.getItem('jwt') ? <Redirect to='/' /> : null}\r\n                <header>\r\n                    <nav className=\"nav\">\r\n                        <div className=\"buttons\">\r\n                            <Link to='/products'><button className={!this.state.active ? 'active-btn main-buttons' : 'main-buttons'} onClick={this.productsClicked}>Products</button></Link>\r\n                            <Link to='/expenses'><button className={this.state.active ? 'active-btn main-buttons' : 'main-buttons'} onClick={this.expensesClicked}>Expenses</button></Link>\r\n                        </div>\r\n                        <div className=\"right-side\">\r\n                            <img id=\"profile-image\" src=\"../../assets/images/small_profile.png\" alt=\"#\" />\r\n                            <p id='name-p'>{this.state.name}</p>\r\n                            <p className=\"user-info\"><Link to='/user-info'>Your Info</Link></p>\r\n                            <p className=\"sign-out\"><Link to='#' onClick={this.signOutClicked}>Sign Out</Link></p>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n                {this.state.signOutClicked ? <SignOut hide={this.hideSignOut}\r\n                    signOutAccepted={this.signOutAccepted}\r\n                /> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        nameUpdated: state.nameUpdated\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Header)","import React from 'react'\r\nimport './Expenses.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { getProducts } from '../../redux/actions/productAction'\r\nimport store from '../../redux/store'\r\n\r\nclass Expenses extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            monthlyDisplay: false,\r\n            yearlyDisplay: true,\r\n            active: false,\r\n            filter: null,\r\n            yearlySelected: null\r\n        }\r\n        this.year = (new Date()).getFullYear() - 20;\r\n        this.years = Array.from(new Array(21), (val, index) => index + this.year);\r\n        this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\r\n            'September', 'October', 'November', 'December'];\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.yearlySelected === 'all') {\r\n            axios.get(\"https://stark-island-29614.herokuapp.com/app/v1/products/?sort=date:desc\",\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    store.dispatch(getProducts(res.data));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        } else if (this.state.yearlySelected != null && this.state.yearlySelected.length === 4 && !this.state.monthlyDisplay ) {\r\n            let dateFrom = new Date(`${this.state.yearlySelected}-01-01 00:00:00.000`).getTime()\r\n            let dateTo = new Date(`${this.state.yearlySelected}-12-31 23:59:59.000`).getTime()\r\n            axios.get(`https://stark-island-29614.herokuapp.com/app/v1/products/?date_from=${dateFrom}&date_to=${dateTo}`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    store.dispatch(getProducts(res.data))\r\n                })\r\n                .catch(err => console.log(err));\r\n        } else if (this.state.filter != null && this.state.yearlySelected != null && this.state.monthlyDisplay) {\r\n            var monthNum;\r\n            for(let i = 0; i < this.months.length; i++) {\r\n                if(this.state.filter === this.months[i]) {\r\n                    monthNum = i + 1;\r\n                    if(i.toString().length === 1) {\r\n                        monthNum = \"0\" + monthNum.toString();;\r\n                    }\r\n                }\r\n            }\r\n            let dateFrom = new Date(`${this.state.yearlySelected}-${monthNum}-01 00:00:00.000`).getTime()\r\n            let dateTo = new Date(`${this.state.yearlySelected}-${monthNum}-31 23:59:59.000`).getTime()\r\n            axios.get(`https://stark-island-29614.herokuapp.com/app/v1/products/?date_from=${dateFrom}&date_to=${dateTo}`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    store.dispatch(getProducts(res.data))\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    yearlySelect = () => {\r\n        this.setState({ monthlyDisplay: false, yearlyDisplay: true, active: false, yearlySelected: 'all', filter: null})\r\n    }\r\n\r\n    monthlySelect = () => {\r\n        this.setState({ yearlyDisplay: false, monthlyDisplay: true, active: true, yearlySelected: 'all', filter: null })\r\n    }\r\n\r\n    yearlySelectHandler = (event) => {\r\n        this.setState({ yearlySelected: event.target.value })\r\n    }\r\n    monthlySelectHandler = (event) => {\r\n        this.setState({ filter: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        \r\n        let yearly =\r\n            <select name=\"year-select\" className=\"month-select\" onChange={this.yearlySelectHandler}>\r\n                <option defaultChecked value='all' > ALL</option>\r\n                {this.years.map((year, index) => {\r\n                    return <option key={`year${index}`} value={year}>{year}</option>\r\n                })}\r\n            </select>;\r\n\r\n        \r\n\r\n        let monthly = (\r\n            <select name=\"month-select\" className=\"month-select select-box\" onChange={this.monthlySelectHandler}>\r\n                {this.months.map((month, index) => {\r\n                    return <option key={`month${index}`} value={month}>{month}</option>\r\n                })}\r\n            </select>)\r\n        \r\n        let yearMonthly = (\r\n            <div className=\"yearMonthly-div\">\r\n            {monthly}\r\n            {yearly}\r\n            </div>\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n                <this.props.header />\r\n                <h3 id=\"expenses-h3\">Expenses</h3>\r\n                <div className=\"expenses-div\">\r\n                    <Link to=\"#\"><button className={!this.state.active ? 'active-btn select-btn' : 'select-btn'} onClick={this.yearlySelect}>Yearly</button></Link>\r\n                    <Link to=\"#\"><button className={this.state.active ? 'active-btn select-btn' : 'select-btn'} onClick={this.monthlySelect}>Monthly</button></Link>\r\n                    <div className=\"select-div\">\r\n                        {this.state.monthlyDisplay ? <label htmlFor=\"month-select\">Choose month and year:</label> : <label htmlFor=\"year-select\">Choose year:</label>   }\r\n                        {this.state.monthlyDisplay ? yearMonthly : yearly}\r\n                    </div>\r\n                </div>\r\n                <this.props.table />\r\n                <div className=\"transparent-div\">\r\n                    <p>Total spent: <span>{this.props.totalPrice}</span> den.</p>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        totalPrice: state.totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Expenses)","import React from 'react'\r\nimport './Products.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport store from '../../redux/store'\r\nimport { editProductClicked, getProducts } from '../../redux/actions/productAction'\r\nclass Products extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            clicked: false,\r\n            filterOption: null\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.state.filterOption !== null) {\r\n            axios.get(`https://stark-island-29614.herokuapp.com/app/v1/products/?sort=${this.state.filterOption}`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                }\r\n            )\r\n                .then(res => {\r\n                    store.dispatch(getProducts(res.data));\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    newProductHandler = () => {\r\n        this.setState({clicked: true})\r\n        store.dispatch(editProductClicked(this.state.clicked))\r\n    }\r\n\r\n    filterHandler = (event) => {\r\n        this.setState({ filterOption: event.target.value })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <this.props.header />\r\n                <div className=\"main-div\">\r\n                    <h3>Products</h3>\r\n                    <label htmlFor=\"sort\">Filter by:\r\n                <select name=\"filterOption\" id=\"sort\" onChange={this.filterHandler}>\r\n                            <option value=\"date:desc\">Last Purchase</option>\r\n                            <option value=\"date:asc\">First Purchase</option>\r\n                            <option value=\"price:desc\">Highest Price</option>\r\n                            <option value=\"price:asc\">Lowest Price</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n                <this.props.table />\r\n                <Link to=\"/new-product\"><button className=\"new-btn\" onClick={this.newProductHandler}>New Product</button></Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products","import React from 'react'\r\nimport './Product.css'\r\n\r\nimport { tableUpdated } from '../../redux/actions/productAction'\r\nimport store from '../../redux/store'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nclass NewProduct extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: this.props.editProductClicked ? this.props.productToEdit.name : '',\r\n            type: this.props.editProductClicked ? this.props.productToEdit.type : '',\r\n            description: this.props.editProductClicked ? this.props.productToEdit.description : '',\r\n            date: this.props.editProductClicked ? this.props.productToEdit.date : '',\r\n            price: this.props.editProductClicked ? this.props.productToEdit.price : '',\r\n            tableUpdated: false\r\n        }\r\n    }\r\n\r\n    saveProduct = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    createProduct = (event) => {\r\n        console.log(this.state)\r\n        if (this.state.name == '' || this.state.type == '' ||\r\n            this.state.description == '' || this.state.date == '' || this.state.price == '') {\r\n            event.preventDefault();\r\n            alert('Fill out the fields correctly!')\r\n        } else if (this.state.name !== '' || this.state.type !== '' ||\r\n            this.state.description !== '' || this.state.date !== '' || this.state.price !== '') {   \r\n            store.dispatch(tableUpdated(!this.state.tableUpdated))\r\n            axios.post('https://stark-island-29614.herokuapp.com/app/v1/products/',\r\n                {\r\n                    name: this.state.name,\r\n                    type: this.state.type,\r\n                    description: this.state.description,\r\n                    date: this.state.date,\r\n                    price: this.state.price,\r\n                    _created: new Date()\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                }\r\n            )\r\n                .then(res => console.log(res))\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    editProduct = (event) => {\r\n        if (this.state.name === '' || this.state.type === '' ||\r\n            this.state.description === '' || this.state.date === '' || this.state.price === '') {\r\n            alert('Please fill the fields!')\r\n            event.preventDefault()\r\n        } else {\r\n            store.dispatch(tableUpdated(!this.state.tableUpdated))\r\n            axios.put(`https://stark-island-29614.herokuapp.com/app/v1/products/${this.props.productToEdit._id}`,\r\n                {\r\n                    name: this.state.name,\r\n                    type: this.state.type,\r\n                    description: this.state.description,\r\n                    date: this.state.date,\r\n                    price: this.state.price,\r\n                    _modified: new Date()\r\n                }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <this.props.header />\r\n                {this.props.editProductClicked ? <h3 id=\"new-products-h3\">Edit Product</h3> : <h3 id=\"new-products-h3\">New Product</h3>}\r\n                <main id=\"main-box\">\r\n                    <div className=\"box-container\">\r\n                        <div className=\"form-box\">\r\n                            <form>\r\n                                <p className=\"input-container\">\r\n                                    <label className=\"text-field-input\" htmlFor=\"name\">Product Name</label>\r\n                                    <input defaultValue={this.props.editProductClicked ? this.props.productToEdit.name : ''}\r\n                                        onChange={this.saveProduct}\r\n                                        className=\"text-field\" type=\"text\" name=\"name\" id=\"name\" />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label className=\"text-field-input\" htmlFor=\"description\">Product Description</label>\r\n                                    <input defaultValue={this.props.editProductClicked ? this.props.productToEdit.description : ''}\r\n                                        onChange={this.saveProduct}\r\n                                        className=\"text-field\" type=\"text\" name=\"description\" id=\"description\" />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label className=\"text-field-input\" htmlFor=\"type\">Product Type</label>\r\n                                    <input defaultValue={this.props.editProductClicked ? this.props.productToEdit.type : ''}\r\n                                        onChange={this.saveProduct}\r\n                                        className=\"text-field\" type=\"text\" name=\"type\" id=\"type\" />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label className=\"text-field-input\" htmlFor=\"date\">Product Date</label>\r\n                                    <input defaultValue={this.props.editProductClicked ? this.props.productToEdit.date.toString().slice(0, 10) : ''}\r\n                                        onChange={this.saveProduct}\r\n                                        className=\"text-field\" type=\"date\" name=\"date\" id=\"date\" />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label className=\"text-field-input\" htmlFor=\"price\">Product Price</label>\r\n                                    <input defaultValue={this.props.editProductClicked ? Number(this.props.productToEdit.price) : ''}\r\n                                        onChange={this.saveProduct}\r\n                                        className=\"text-field\" type=\"text\" name=\"price\" id=\"price\" />\r\n                                </p>\r\n                                <Link to='/products'>\r\n                                    {this.props.editProductClicked ?\r\n                                        <button onClick={this.editProduct} id=\"primary-button\" className=\"primary-btn\" type=\"submit\"> Edit Product</button> :\r\n                                        <button onClick={this.createProduct} id=\"primary-button\" className=\"primary-btn\" type=\"submit\"> Create Product</button>}\r\n                                </Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"new-product-div\">\r\n                        <span><i className=\"fas fa-plus-circle\"></i></span>\r\n                        {this.props.editProductClicked ? <h3>You are editing a product</h3> : <h3>You are creating a new product</h3>}\r\n\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        productToEdit: state.productToEdit,\r\n        editProductClicked: state.editProductClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewProduct)","import React from 'react'\r\nimport '../../assets/styles/Authentication.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: null,\r\n            password: null,\r\n            signed: false\r\n        }\r\n    }\r\n\r\n    saveLoginData = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    redirectToMain = () => {\r\n        if (this.state.signed) {\r\n            return <Redirect to='/products' />\r\n        }\r\n    }\r\n\r\n    signIn = (event) => {\r\n        event.preventDefault();\r\n        axios.post('https://stark-island-29614.herokuapp.com/app/v1/auth/login',\r\n            {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n            .then(res => {\r\n                localStorage.setItem('jwt', res.data.jwt);\r\n                localStorage.setItem('email', res.data.email);\r\n                localStorage.setItem('first_name', res.data.first_name);\r\n                localStorage.setItem('last_name', res.data.last_name);\r\n                this.setState({ signed: true })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.redirectToMain()}\r\n                <main>\r\n                    <div className=\"box\" id=\"login\">\r\n                        <form>\r\n                            <p className=\"input-container\">\r\n                                <label className=\"text-field-input\" htmlFor=\"email\">E-mail</label>\r\n                                <input onChange={this.saveLoginData} className=\"text-field\" type=\"email\" name=\"email\" id=\"email\" />\r\n                            </p>\r\n                            <p className=\"input-container\">\r\n                                <label className=\"text-field-input\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.saveLoginData} className=\"text-field\" type=\"password\" name=\"password\" id=\"password\" />\r\n                            </p>\r\n                            <button className=\"primary-btn\" type=\"submit\" onClick={this.signIn}>Sign in</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"textDiv\">\r\n                        <p>Or if you don't have an account, <Link to=\"/register\" className=\"additional-info\">Register</Link></p>\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport '../../assets/styles/Authentication.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Register extends React.Component {\r\n        constructor(props) {\r\n                super(props)\r\n                this.state = {\r\n                        first_name: null,\r\n                        last_name: null,\r\n                        email: null,\r\n                        date_of_birth: null,\r\n                        telephone: null,\r\n                        country: null,\r\n                        password: null,\r\n                        signed: false\r\n                }\r\n        }\r\n        saveUserToState = (event) => {\r\n                this.setState({ [event.target.name]: event.target.value });\r\n        }\r\n\r\n        redirectToMain = () => {\r\n                if(this.state.signed) {\r\n                        return <Redirect to='/products' />\r\n                }\r\n        }\r\n\r\n        saveUser = (event) => {\r\n                if (this.state.first_name == null || this.state.last_name == null ||\r\n                        this.state.email == null || this.state.date_of_birth == null ||\r\n                        this.state.telephone == null || this.state.country == null || this.state.password == null) {\r\n                        event.preventDefault()\r\n                        alert('Please input correct data!')\r\n                } else if(this.state.first_name !== null && this.state.last_name !== null &&\r\n                        this.state.email !== null && this.state.date_of_birth !== null &&\r\n                        this.state.telephone !== null && this.state.country !== null && this.state.password !== null) {\r\n                        console.log(\"Entered else\")\r\n                        event.preventDefault()\r\n                        axios.post('https://stark-island-29614.herokuapp.com/app/v1/auth/register', {\r\n                                first_name: this.state.first_name,\r\n                                last_name: this.state.last_name,\r\n                                email: this.state.email,\r\n                                password: this.state.password,\r\n                                date_of_birth: this.state.date_of_birth,\r\n                                telephone: this.state.telephone,\r\n                                country: this.state.country,\r\n                                _created: new Date(),\r\n                        })\r\n                                .then(res => {\r\n                                        axios.post('https://stark-island-29614.herokuapp.com/app/v1/auth/login',\r\n                                                {\r\n                                                        email: this.state.email,\r\n                                                        password: this.state.password\r\n                                                })\r\n                                                .then(res => {\r\n                                                        localStorage.setItem('jwt', res.data.jwt);\r\n                                                        localStorage.setItem('email', res.data.email);\r\n                                                        localStorage.setItem('first_name', res.data.first_name);\r\n                                                        localStorage.setItem('last_name', res.data.last_name);\r\n                                                        this.setState({ signed: true })\r\n                                                })\r\n                                                .catch(err => {\r\n                                                        console.log(err)\r\n                                                });\r\n                                })\r\n                                .catch(err => {\r\n                                        console.log(err)\r\n                                })\r\n                }\r\n        }\r\n\r\n        render() {\r\n                return (\r\n                        <React.Fragment>\r\n                                {this.redirectToMain()}\r\n                                <div className=\"box\" id=\"register\">\r\n                                        <form>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" id=\"first-name-label\" htmlFor=\"first_name\">First Name</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"text\" name=\"first_name\" id=\"first_name\" />\r\n                                                </p>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" htmlFor=\"last_name\">Last Name</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"text\" name=\"last_name\" id=\"last_name\" />\r\n                                                </p>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" htmlFor=\"email\">E-mail</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"email\" name=\"email\" id=\"email\" />\r\n                                                </p>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" htmlFor=\"date_of_birth\">Date of Birth</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"date\" name=\"date_of_birth\" id=\"date_of_birth\" />\r\n                                                </p>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" htmlFor=\"telephone\">Telephone</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"text\" name=\"telephone\" id=\"telephone\" />\r\n                                                </p>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" htmlFor=\"country\">Country</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"text\" name=\"country\" id=\"country\" />\r\n                                                </p>\r\n                                                <p className=\"input-container\">\r\n                                                        <label className=\"text-field-input\" htmlFor=\"password\">Password</label>\r\n                                                        <input onChange={this.saveUserToState} className=\"text-field\" type=\"password\" name=\"password\" id=\"password\" />\r\n                                                </p>\r\n                                                <button className=\"primary-btn\" type=\"submit\" onClick={this.saveUser}>Register</button>\r\n                                        </form>\r\n                                </div>\r\n\r\n                                <div className=\"textDiv\">\r\n                                        <p>Or if you already have an account, <Link className=\"additional-info\" to=\"/\">Sign in</Link></p>\r\n                                </div>\r\n                        </React.Fragment>\r\n                )\r\n        }\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport '../../assets/styles/Pop-up.css'\r\n\r\nconst alert = (props) => {\r\n    return (\r\n        <div id=\"alert\" className='delete'>\r\n        <div id=\"alert-container\">\r\n            <div id=\"alert-text-container\">\r\n                <h1>Delete Product</h1>\r\n                <p>You are about to delete this product. Are you sure you wish to continue ?</p>\r\n            </div>\r\n            <div id=\"alert-buttons\">\r\n                <button className=\"alert-btn\" id=\"cancel-alert-btn\" onClick={props.hide}\r\n                >CANCEL</button>\r\n                <button className=\"alert-btn\" id=\"delete-alert-btn\" onClick={props.delete}\r\n                >DELETE</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default alert;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst TableTools = (props) => {\r\n    return ( <td>\r\n        <Link to=\"/edit-product\">\r\n            <button id=\"edit-button\" onClick={props.editProduct} ><i className=\"far fa-edit\"></i></button>\r\n        </Link>\r\n        <button onClick={props.deleteProduct} id=\"delete-button\"><i className=\"far fa-trash-alt\"></i></button>\r\n    </td>)\r\n}\r\n\r\nexport default TableTools","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport TableTools from './TableTools'\r\n\r\nconst tableRow = (props) => {\r\n    return (\r\n        <tr id=\"first-tr\" className=\"body-tr\">\r\n            <td>{props.name}</td>\r\n            <td>{props.type}</td>\r\n            <td>{props.description}</td>\r\n            <td>{props.date.toString().slice(0, 10)}</td>\r\n            <td>{props.price}</td>\r\n            {props.expensesClicked ? \r\n                null : <props.tableTools editProduct={props.editProduct} deleteProduct={props.deleteProduct}/>}\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return ({\r\n        expensesClicked: state.expensesClicked\r\n    }\r\n    )\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(tableRow);","import React from 'react'\r\nimport './Table.css'\r\nimport Alert from '../Alert/Alert'\r\nimport TableRow from './TableRow'\r\nimport TableTools from './TableTools'\r\nimport { connect } from 'react-redux'\r\nimport store from '../../redux/store'\r\n\r\nimport { deleteProduct, getProducts, editProduct, editProductClicked, getTotalPrice, tableUpdated } from '../../redux/actions/productAction'\r\nimport axios from 'axios'\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            alertShow: false,\r\n            product: null,\r\n            editProductClicked: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.products) {\r\n            axios.get(\"https://stark-island-29614.herokuapp.com/app/v1/products/?sort=date:desc\",\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    store.dispatch(getProducts(res.data));\r\n                    let totalPrice = 0;\r\n                    for (let i = 0; i < res.data.length; i++) {\r\n                        totalPrice += parseInt(res.data[i].price)\r\n                    }\r\n                    store.dispatch(getTotalPrice(totalPrice));\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.tableUpdated) {\r\n                axios.get(\"https://stark-island-29614.herokuapp.com/app/v1/products/?sort=date:desc\",\r\n                    {\r\n                        headers: {\r\n                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                        }\r\n                    }\r\n                )\r\n                    .then(res => {\r\n                        store.dispatch(getProducts(res.data));\r\n                        store.dispatch(tableUpdated(false));\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n               \r\n        }\r\n    }\r\n\r\n    hideAlert = () => {\r\n        this.setState({ alertShow: false })\r\n    }\r\n\r\n    editProduct = (product) => {\r\n        const clicked = !this.state.editProductClicked\r\n        store.dispatch(editProduct(product));\r\n        store.dispatch(editProductClicked(clicked));\r\n\r\n    }\r\n\r\n    deleteProduct = (product, productID) => {\r\n        this.setState({ alertShow: false })\r\n        axios.delete(`https://stark-island-29614.herokuapp.com/app/v1/products/${productID}`,\r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res)\r\n                store.dispatch(deleteProduct(product))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    deleteProductHandler = (product) => {\r\n        this.setState({ product: product })\r\n        this.setState({ alertShow: true })\r\n\r\n    }\r\n\r\n    render() {\r\n        let tableRow = null;\r\n        if (this.props.products) {\r\n            tableRow = this.props.products.map(product => {\r\n                return (<TableRow key={product.name + Math.random()} name={product.name}\r\n                    deleteProduct={() => this.deleteProductHandler(product)}\r\n                    editProduct={() => this.editProduct(product)}\r\n                    type={product.type}\r\n                    description={product.description}\r\n                    date={product.date}\r\n                    price={product.price}\r\n                    tableTools={TableTools}\r\n                />)\r\n            })\r\n        }\r\n\r\n        let alert = null;\r\n        if (this.state.alertShow) {\r\n            alert = <Alert hide={this.hideAlert}\r\n                delete={() => this.deleteProduct(this.state.product, this.state.product._id)}\r\n            />\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <main className=\"main-box\">\r\n                    <table className=\"Table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Product Name</th>\r\n                                <th>Product Type</th>\r\n                                <th>Product Description</th>\r\n                                <th>Purchase Date</th>\r\n                                <th>Product Price</th>\r\n                                {this.props.expensesClicked ? null : <th>Product Options</th>}\r\n                            </tr>\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td id=\"emptyTd\"></td>\r\n                            </tr>\r\n                            {tableRow}\r\n                        </tbody>\r\n                    </table>\r\n                </main>\r\n                {alert}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        products: state.products,\r\n        expensesClicked: state.expensesClicked,\r\n        tableUpdated: state.tableUpdated\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)","import React from 'react'\r\nimport './UserInfo.css'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { nameUpdated } from '../../redux/actions/userAction'\r\nimport store from '../../redux/store'\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            first_name: '',\r\n            last: '',\r\n            email: '',\r\n            birthday: '',\r\n            country: '',\r\n            telephone: '',\r\n            id: '',\r\n            addressCheckbox: false,\r\n            address: ''\r\n        }\r\n    }\r\n\r\n    saveUserInfo = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value})\r\n        console.log(this.state.address)\r\n    }\r\n\r\n    checkboxClickedHandler = (event) => {\r\n        this.setState({ addressCheckbox: event.target.checked })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.post('https://stark-island-29614.herokuapp.com/app/v1/auth/user-info',\r\n            {\r\n                email: localStorage.getItem('email')\r\n            },\r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    first_name: res.data[0].first_name,\r\n                    last_name: res.data[0].last_name,\r\n                    email: res.data[0].email,\r\n                    birthday: res.data[0].date_of_birth.toString().slice(0, 10),\r\n                    country: res.data[0].country,\r\n                    telephone: res.data[0].telephone,\r\n                    id: res.data[0]._id,\r\n                    address: res.data[0]._address\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    updateUserInfo = (event) => {\r\n        if (this.state.first_name.length === 0 && this.state.last_name.length === 0 &&\r\n            this.state.email.length === 0 && this.state.birthday.length === 0 && this.state.country.length === 0 && this.state.telephone.length === 0) {\r\n            alert('Please fill the fields!')\r\n            event.preventDefault()\r\n        } else {\r\n            axios.put(`https://stark-island-29614.herokuapp.com/app/v1/auth/user-info/${this.state.id}`, {\r\n                first_name: this.state.first_name,\r\n                last_name: this.state.last_name,\r\n                email: this.state.email,\r\n                date_of_birth: this.state.birthday,\r\n                country: this.state.country,\r\n                telephone: this.state.telephone,\r\n                _address: this.state.address\r\n            },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                }\r\n            )\r\n                .then(res => {\r\n                    localStorage.setItem('email', this.state.email)\r\n                    localStorage.setItem('first_name', this.state.first_name)\r\n                    localStorage.setItem('last_name', this.state.last_name)\r\n                    store.dispatch(nameUpdated(true))\r\n                    //window.location.reload()\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <this.props.header />\r\n                <h3 className=\"general-h3\">General Account Settings</h3>\r\n                <main className=\"user-info-main\">\r\n                    <div className=\"user-info-div\">\r\n                        <div className=\"user-form-box\">\r\n                            <form>\r\n                                <p className=\"input-container\">\r\n                                    <label htmlFor=\"first_name\" className=\"val-label\">First Name: </label>\r\n                                    <input onChange={this.saveUserInfo} id=\"first_name\" name=\"first_name\" className=\"val-input\" type=\"text\" defaultValue={this.state.first_name} />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label htmlFor=\"last_name\" className=\"val-label\">Last Name: </label>\r\n                                    <input onChange={this.saveUserInfo} id=\"last_name\" name=\"last_name\" className=\"val-input\" type=\"text\" defaultValue={this.state.last_name} />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label htmlFor=\"birthday\" className=\"val-label\">Birthday: </label>\r\n                                    <input onChange={this.saveUserInfo} id=\"birthday\" name=\"birthday\" className=\"val-input\" type=\"date\" defaultValue={this.state.birthday} />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label htmlFor=\"email\" className=\"val-label\">Email: </label>\r\n                                    <input onChange={this.saveUserInfo} id=\"email\" name=\"email\" className=\"val-input\" type=\"email\" defaultValue={this.state.email} />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label htmlFor=\"country\" className=\"val-label\">Country: </label>\r\n                                    <input onChange={this.saveUserInfo} id=\"country\" name=\"country\" className=\"val-input\" type=\"text\" defaultValue={this.state.country} />\r\n                                </p>\r\n                                <p className=\"input-container\">\r\n                                    <label htmlFor=\"telephone\" className=\"val-label\">Telephone: </label>\r\n                                    <input onChange={this.saveUserInfo} id=\"telephone\" name=\"telephone\" className=\"val-input\" type=\"text\" defaultValue={this.state.telephone} />\r\n                                </p>\r\n                                <p className=\"address-p\">\r\n                                    <label htmlFor=\"addressCheckbox\" className=\"val-label\">If you want to add an address, select: </label>\r\n                                    <input onChange={this.checkboxClickedHandler} type=\"checkbox\" name=\"addressCheckbox\" id=\"addressCheckbox\" />\r\n                                </p>\r\n                                {this.state.addressCheckbox ? \r\n                                 <p className=\"input-container\">\r\n                                    <label htmlFor=\"address\" className=\"val-label\">Address: </label>\r\n                                    <input onChange={this.saveUserInfo} defaultValue={this.state.address} className=\"val-input\" type=\"text\" name=\"address\" id=\"address\" />\r\n                                </p> : null}\r\n                                <Link to='/products'>\r\n                                    <button className=\"save-btn\" onClick={this.updateUserInfo}>Save Settings</button>\r\n                                </Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"new-product-div\">\r\n                        <span><i className=\"fas fa-plus-circle\"></i></span>\r\n                        <h3>You are changing your user account settings</h3>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo\r\n\r\n","export const saveUserName = (first_name, last_name) => {\r\n    return {\r\n        type: \"SAVE_USER_NAME\",\r\n        userName: {\r\n            first_name: first_name,\r\n            last_name: last_name\r\n        }\r\n    }\r\n}\r\n\r\nexport const nameUpdated = (nameUpdated) => {\r\n    return {\r\n        type: \"NAME_UPDATED\",\r\n        nameUpdated\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Header from './components/Navigation/Header'\nimport Expenses from './components/Calculator/Expenses'\nimport Products from './components/Calculator/Products'\nimport Product from './components/Product/Product'\nimport Login from './components/Authentication/Login'\nimport Register from './components/Authentication/Register'\nimport Table from './components/Table/Table'\nimport UserInfo from './components/UserInfo/UserInfo'\n\nclass App extends Component {\n    render() {\n        return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/products\" render={() =><Products header={Header} table={Table}/>} />\n                <Route exact path=\"/expenses\" render={() => <Expenses header={Header} table={Table}/>} />\n                <Route exact path=\"/new-product\" render={() => <Product header={Header} />} />\n                <Route exact path=\"/edit-product\" render={() => <Product header={Header} />} />\n                <Route exact path=\"/user-info\" render={() => <UserInfo header={Header} />} />\n            </Switch>\n        </Router>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}